kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    backstage.io/kubernetes-id: ${{values.component_id | dump}}
    backstage.io/kubernetes-namespace: ${{values.kubernetes_ns}}
    backstage.io/techdocs-ref: 'dir:.'
    github.com/project-slug: mronconis/${{values.component_id | dump}}
    janus-idp.io/tekton-enabled: 'true'
  name: ${{values.component_id | dump}}
  labels:
    backstage.io/kubernetes-id: ${{values.component_id | dump}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${{values.component_id | dump}}
  template:
    metadata:
      labels:
        app: ${{values.component_id | dump}}
        backstage.io/kubernetes-id: ${{values.component_id | dump}}
    spec:
      containers:
        - name: ${{values.component_id | dump}}
          image: quay.io/mronconi/${{values.component_id}}:0.0.1-SNAPSHOT
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600