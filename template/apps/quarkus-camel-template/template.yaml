apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: quarkus-template
  title: Quarkus Camel Service
  description: Create a simple microservice using Camel and Quarkus
  tags:
    - recommended
    - java
    - camel
    - quarkus
spec:
  owner: default/guest
  type: service

  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
        - java_package_name
        - kubernetes_ns
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        java_package_name:
          title: Java Package Name
          type: string
          description: Name for the java package. eg (io.backstage.blah)
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        kubernetes_ns:
          title: Kubernetes namespace
          type: string
          description: Name of kubernetes namespace to deploy service.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    # - id: template
    #   name: Fetch Skeleton + Template
    #   action: fetch:template
    #   input:
    #     url: ./skeleton
    #     copyWithoutRender:
    #       - .github/workflows/*
    #     values:
    #       component_id: ${{ parameters.component_id }}
    #       description: ${{ parameters.description }}
    #       artifact_id: ${{ parameters.component_id }}
    #       java_package_name: ${{ parameters.java_package_name }}
    #       java_package_path: ${{ parameters.java_package_name | replace(".", "/") }}
    #       kubernetes_ns: ${{ parameters.kubernetes_ns }}
    #       owner: ${{ parameters.owner }}
    #       destination: ${{ parameters.repoUrl | parseRepoUrl }}
    #       http_port: 8080
          
    - id: backstage_request
      name: backstage request
      action: http:backstage:request
      input:
        method: 'GET'
        path: '/proxy/echo-server/sample-request'
        params:
          foo: 'bar'
        body:
          pippo: ${{ parameters.java_package_name }}

    # - id: publish
    #   name: Publish
    #   action: publish:github
    #   input:
    #     allowedHosts: ["github.com"]
    #     description: This is ${{ parameters.component_id }}
    #     repoUrl: ${{ parameters.repoUrl }}
    #     repoVisibility: public

    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
    #     catalogInfoPath: "/catalog-info.yaml"

  output:
    getResponse: '{{ steps.backstage_request.output.body }}'
    getCode: '{{ steps.backstage_request.output.code }}'
    getHeaders: '{{ steps.backstage_request.output.headers }}'

  # output:
  #   links:
  #     - title: Repository
  #       url: ${{ steps.publish.output.remoteUrl }}
  #     - title: Open in catalog
  #       icon: catalog
  #       entityRef: ${{ steps.register.output.entityRef }}
